{
	"id": "58fe8f7671e27de54bc666ef9446255f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"day2/Wei.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\ncontract WeiEther{\r\n    event WeiEtherLog(address sender,uint value, uint balance);\r\n    function pay() public payable{\r\n        require(msg.value >= 1 wei);\r\n        \r\n        address payable receiver = payable(0x1234567890123456789012345678901234567890);\r\n\r\n        receiver.transfer(msg.value);\r\n\r\n        emit WeiEtherLog(msg.sender, msg.value,receiver.balance);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"day2/Wei.sol": {
				"WeiEther": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "WeiEtherLog",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "pay",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"day2/Wei.sol\":27:403  contract WeiEther{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"day2/Wei.sol\":27:403  contract WeiEther{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1b9265b8\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"day2/Wei.sol\":116:400  function pay() public payable{... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      stop\n    tag_4:\n        /* \"day2/Wei.sol\":177:182  1 wei */\n      0x01\n        /* \"day2/Wei.sol\":164:173  msg.value */\n      callvalue\n        /* \"day2/Wei.sol\":164:182  msg.value >= 1 wei */\n      lt\n      iszero\n        /* \"day2/Wei.sol\":156:183  require(msg.value >= 1 wei) */\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n        /* \"day2/Wei.sol\":204:228  address payable receiver */\n      0x00\n        /* \"day2/Wei.sol\":239:281  0x1234567890123456789012345678901234567890 */\n      0x1234567890123456789012345678901234567890\n        /* \"day2/Wei.sol\":204:282  address payable receiver = payable(0x1234567890123456789012345678901234567890) */\n      swap1\n      pop\n        /* \"day2/Wei.sol\":295:303  receiver */\n      dup1\n        /* \"day2/Wei.sol\":295:312  receiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"day2/Wei.sol\":295:323  receiver.transfer(msg.value) */\n      0x08fc\n        /* \"day2/Wei.sol\":313:322  msg.value */\n      callvalue\n        /* \"day2/Wei.sol\":295:323  receiver.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_8\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_8:\n      pop\n        /* \"day2/Wei.sol\":341:392  WeiEtherLog(msg.sender, msg.value,receiver.balance) */\n      0xb94974545a27601ce7a17e402284480ec811ca316eef4dc57074efa4a64f3882\n        /* \"day2/Wei.sol\":353:363  msg.sender */\n      caller\n        /* \"day2/Wei.sol\":365:374  msg.value */\n      callvalue\n        /* \"day2/Wei.sol\":375:383  receiver */\n      dup4\n        /* \"day2/Wei.sol\":375:391  receiver.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"day2/Wei.sol\":341:392  WeiEtherLog(msg.sender, msg.value,receiver.balance) */\n      mload(0x40)\n      tag_9\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"day2/Wei.sol\":145:400  {... */\n      pop\n        /* \"day2/Wei.sol\":116:400  function pay() public payable{... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_11:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_12:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_19\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_11\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_13:\n        /* \"#utility.yul\":328:352   */\n      tag_21\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_12\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:442   */\n    tag_14:\n        /* \"#utility.yul\":402:409   */\n      0x00\n        /* \"#utility.yul\":431:436   */\n      dup2\n        /* \"#utility.yul\":420:436   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":448:566   */\n    tag_15:\n        /* \"#utility.yul\":535:559   */\n      tag_24\n        /* \"#utility.yul\":553:558   */\n      dup2\n        /* \"#utility.yul\":535:559   */\n      tag_14\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":530:533   */\n      dup3\n        /* \"#utility.yul\":523:560   */\n      mstore\n        /* \"#utility.yul\":448:566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":572:1014   */\n    tag_10:\n        /* \"#utility.yul\":721:725   */\n      0x00\n        /* \"#utility.yul\":759:761   */\n      0x60\n        /* \"#utility.yul\":748:757   */\n      dup3\n        /* \"#utility.yul\":744:762   */\n      add\n        /* \"#utility.yul\":736:762   */\n      swap1\n      pop\n        /* \"#utility.yul\":772:843   */\n      tag_26\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":829:838   */\n      dup4\n        /* \"#utility.yul\":825:842   */\n      add\n        /* \"#utility.yul\":816:822   */\n      dup7\n        /* \"#utility.yul\":772:843   */\n      tag_13\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":853:925   */\n      tag_27\n        /* \"#utility.yul\":921:923   */\n      0x20\n        /* \"#utility.yul\":910:919   */\n      dup4\n        /* \"#utility.yul\":906:924   */\n      add\n        /* \"#utility.yul\":897:903   */\n      dup6\n        /* \"#utility.yul\":853:925   */\n      tag_15\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":935:1007   */\n      tag_28\n        /* \"#utility.yul\":1003:1005   */\n      0x40\n        /* \"#utility.yul\":992:1001   */\n      dup4\n        /* \"#utility.yul\":988:1006   */\n      add\n        /* \"#utility.yul\":979:985   */\n      dup5\n        /* \"#utility.yul\":935:1007   */\n      tag_15\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":572:1014   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201b9bd20396a59fe657e690d5310f874b2e2cccc5fea01c7172ef296edde669f364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101b7806100206000396000f3fe60806040526004361061001e5760003560e01c80631b9265b814610023575b600080fd5b61002b61002d565b005b600134101561003b57600080fd5b600073123456789012345678901234567890123456789090508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561009a573d6000803e3d6000fd5b507fb94974545a27601ce7a17e402284480ec811ca316eef4dc57074efa4a64f388233348373ffffffffffffffffffffffffffffffffffffffff16316040516100e59392919061014a565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b82525050565b6000819050919050565b61014481610131565b82525050565b600060608201905061015f6000830186610122565b61016c602083018561013b565b610179604083018461013b565b94935050505056fea26469706673582212201b9bd20396a59fe657e690d5310f874b2e2cccc5fea01c7172ef296edde669f364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B9265B8 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x1234567890123456789012345678901234567890 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xB94974545A27601CE7A17E402284480EC811CA316EEF4DC57074EFA4A64F3882 CALLER CALLVALUE DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144 DUP2 PUSH2 0x131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x122 JUMP JUMPDEST PUSH2 0x16C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x179 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP12 0xD2 SUB SWAP7 0xA5 SWAP16 0xE6 JUMPI 0xE6 SWAP1 0xD5 BALANCE 0xF DUP8 0x4B 0x2E 0x2C 0xCC 0xC5 INVALID LOG0 SHR PUSH18 0x72EF296EDDE669F364736F6C634300081100 CALLER ",
							"sourceMap": "27:376:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@pay_43": {
									"entryPoint": 45,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1017:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "410:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "420:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "431:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "420:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "392:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "402:7:1",
														"type": ""
													}
												],
												"src": "365:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "513:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "530:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "553:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "535:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "535:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "508:3:1",
														"type": ""
													}
												],
												"src": "448:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "726:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "736:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "748:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "744:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "736:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "816:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "840:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "825:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "825:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "772:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "772:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "897:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "910:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "921:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "906:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "853:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "853:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "853:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "979:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1003:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "935:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "935:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "694:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "702:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "710:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "721:4:1",
														"type": ""
													}
												],
												"src": "572:442:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c80631b9265b814610023575b600080fd5b61002b61002d565b005b600134101561003b57600080fd5b600073123456789012345678901234567890123456789090508073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561009a573d6000803e3d6000fd5b507fb94974545a27601ce7a17e402284480ec811ca316eef4dc57074efa4a64f388233348373ffffffffffffffffffffffffffffffffffffffff16316040516100e59392919061014a565b60405180910390a150565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011b826100f0565b9050919050565b61012b81610110565b82525050565b6000819050919050565b61014481610131565b82525050565b600060608201905061015f6000830186610122565b61016c602083018561013b565b610179604083018461013b565b94935050505056fea26469706673582212201b9bd20396a59fe657e690d5310f874b2e2cccc5fea01c7172ef296edde669f364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B9265B8 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B PUSH2 0x2D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x1234567890123456789012345678901234567890 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xB94974545A27601CE7A17E402284480EC811CA316EEF4DC57074EFA4A64F3882 CALLER CALLVALUE DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x110 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144 DUP2 PUSH2 0x131 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x122 JUMP JUMPDEST PUSH2 0x16C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x179 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x13B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL SWAP12 0xD2 SUB SWAP7 0xA5 SWAP16 0xE6 JUMPI 0xE6 SWAP1 0xD5 BALANCE 0xF DUP8 0x4B 0x2E 0x2C 0xCC 0xC5 INVALID LOG0 SHR PUSH18 0x72EF296EDDE669F364736F6C634300081100 CALLER ",
							"sourceMap": "27:376:0:-:0;;;;;;;;;;;;;;;;;;;;;116:284;;;:::i;:::-;;;177:5;164:9;:18;;156:27;;;;;;204:24;239:42;204:78;;295:8;:17;;:28;313:9;295:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;341:51;353:10;365:9;375:8;:16;;;341:51;;;;;;;;:::i;:::-;;;;;;;;145:255;116:284::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:77::-;402:7;431:5;420:16;;365:77;;;:::o;448:118::-;535:24;553:5;535:24;:::i;:::-;530:3;523:37;448:118;;:::o;572:442::-;721:4;759:2;748:9;744:18;736:26;;772:71;840:1;829:9;825:17;816:6;772:71;:::i;:::-;853:72;921:2;910:9;906:18;897:6;853:72;:::i;:::-;935;1003:2;992:9;988:18;979:6;935:72;:::i;:::-;572:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87800",
								"executionCost": "135",
								"totalCost": "87935"
							},
							"external": {
								"pay()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 403,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201b9bd20396a59fe657e690d5310f874b2e2cccc5fea01c7172ef296edde669f364736f6c63430008110033",
									".code": [
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "1B9265B8"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 403,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 400,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 177,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 164,
											"end": 173,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 164,
											"end": 182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 164,
											"end": 182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 156,
											"end": 183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 156,
											"end": 183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 156,
											"end": 183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 156,
											"end": 183,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 156,
											"end": 183,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 156,
											"end": 183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 204,
											"end": 228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 281,
											"name": "PUSH",
											"source": 0,
											"value": "1234567890123456789012345678901234567890"
										},
										{
											"begin": 204,
											"end": 282,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 204,
											"end": 282,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 295,
											"end": 312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 313,
											"end": 322,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 295,
											"end": 323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 323,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 295,
											"end": 323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 295,
											"end": 323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "B94974545A27601CE7A17E402284480EC811CA316EEF4DC57074EFA4A64F3882"
										},
										{
											"begin": 353,
											"end": 363,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 365,
											"end": 374,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 375,
											"end": 391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 375,
											"end": 391,
											"name": "BALANCE",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 392,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 392,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 341,
											"end": 392,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 145,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 402,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 420,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 420,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 365,
											"end": 442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 448,
											"end": 566,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 448,
											"end": 566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 553,
											"end": 558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 535,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 535,
											"end": 559,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 535,
											"end": 559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 530,
											"end": 533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 523,
											"end": 560,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 448,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 721,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 744,
											"end": 762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 736,
											"end": 762,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 736,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 825,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 772,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 772,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 772,
											"end": 843,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 772,
											"end": 843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 921,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 910,
											"end": 919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 906,
											"end": 924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 903,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 853,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 853,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 925,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 853,
											"end": 925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1003,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 979,
											"end": 985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 935,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 935,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 572,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"day2/Wei.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"pay()": "1b9265b8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"WeiEtherLog\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"day2/Wei.sol\":\"WeiEther\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"day2/Wei.sol\":{\"keccak256\":\"0xfe15df14e322982418d1dc44de22ef9eed7a2df2f6b9accef37b84f50a28e8ad\",\"urls\":[\"bzz-raw://7d5c04a64a9706e940ef1f3f9f4c2a3ad8d901d8d17fb8e402c1dfbe76b8f296\",\"dweb:/ipfs/QmT1haKovQvxbrjFU5qJTmdqeC9ksTJQnNdyvaQEawfgB9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> day2/Wei.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "day2/Wei.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"day2/Wei.sol": {
				"ast": {
					"absolutePath": "day2/Wei.sol",
					"exportedSymbols": {
						"WeiEther": [
							44
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "WeiEther",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "WeiEther",
							"nameLocation": "36:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "b94974545a27601ce7a17e402284480ec811ca316eef4dc57074efa4a64f3882",
									"id": 9,
									"name": "WeiEtherLog",
									"nameLocation": "57:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "77:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "69:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "89:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "84:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "84:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "96:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "96:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68:41:0"
									},
									"src": "51:59:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "145:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "164:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "168:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "164:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "177:5:0",
																"subdenomination": "wei",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "164:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "156:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "156:27:0"
											},
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "receiver",
														"nameLocation": "220:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 42,
														"src": "204:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 19,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "204:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 25,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307831323334353637383930313233343536373839303132333435363738393031323334353637383930",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "239:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x1234567890123456789012345678901234567890"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "231:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 21,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "231:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "231:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "204:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 29,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "313:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "317:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "313:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 26,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "295:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "304:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "295:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "295:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "295:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 34,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "353:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "357:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "353:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 36,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "365:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "369:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "365:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 38,
																"name": "receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "375:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "384:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "375:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 33,
														"name": "WeiEtherLog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "341:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "341:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "EmitStatement",
												"src": "336:56:0"
											}
										]
									},
									"functionSelector": "1b9265b8",
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pay",
									"nameLocation": "125:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "145:0:0"
									},
									"scope": 44,
									"src": "116:284:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 45,
							"src": "27:376:0",
							"usedErrors": []
						}
					],
					"src": "0:403:0"
				},
				"id": 0
			}
		}
	}
}